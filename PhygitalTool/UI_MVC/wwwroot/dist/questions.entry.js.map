{"version":3,"file":"questions.entry.js","mappings":";;;;;;;;;;;;;;;;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kEAAkE,aAAa;AAC/E;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;UCnEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACsD;AACR;AACA;AAC9C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,cAAc,2DAAW;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA,oCAAoC,mEAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY,sBAAsB,qBAAqB,IAAI,eAAe;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,2DAAW;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://phygital/./src/ts/Questions/questionsRest.ts","webpack://phygital/webpack/bootstrap","webpack://phygital/webpack/runtime/define property getters","webpack://phygital/webpack/runtime/hasOwnProperty shorthand","webpack://phygital/webpack/runtime/make namespace object","webpack://phygital/./src/ts/Questions/questions.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nexport function fillSubthemesSelect() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch(`/api/Themas/subthemas`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return yield response.json();\r\n    });\r\n}\r\nexport function sendOptions(options) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const response = yield fetch('/api/Questions/SaveOptions', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(options)\r\n            });\r\n            if (response.ok) {\r\n                console.log('Options sent successfully');\r\n            }\r\n            else {\r\n                console.error('Failed to send options');\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    });\r\n}\r\nexport function addQuestion(data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const response = yield fetch('/api/Questions/AddQuestion', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n            if (response.ok) {\r\n                alert('Question added successfully');\r\n            }\r\n            else {\r\n                const errorMessage = yield response.text();\r\n                alert(`Failed to add question. Server response: ${errorMessage}`);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error('Error adding question:', error);\r\n        }\r\n    });\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { fillSubthemesSelect } from \"./questionsRest\";\r\nimport { sendOptions } from \"./questionsRest\";\r\nimport { addQuestion } from \"./questionsRest\";\r\nconst optionButton = document.getElementById(\"OptionButton\");\r\nconst submitQuestion = document.getElementById(\"submitQuestion\");\r\nexport function addOption() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const input = document.getElementById('OptionTitle');\r\n        const optionValue = input.value.trim();\r\n        const optionList = document.getElementById('optionList');\r\n        if (optionValue && optionList.childElementCount < 4) {\r\n            if (optionValue.length > 30) {\r\n                alert('Option cannot exceed 30 characters.');\r\n                return;\r\n            }\r\n            const listItem = document.createElement('li');\r\n            listItem.className = 'list-group-item d-flex justify-content-between align-items-center';\r\n            listItem.textContent = optionValue;\r\n            const removeButton = document.createElement('button');\r\n            removeButton.className = 'btn btn-danger btn-sm';\r\n            removeButton.textContent = 'Remove';\r\n            removeButton.addEventListener('click', () => {\r\n                optionList.removeChild(listItem);\r\n                document.getElementById('OptionButton').disabled = false;\r\n            });\r\n            listItem.appendChild(removeButton);\r\n            optionList.appendChild(listItem);\r\n            input.value = ''; // Clear the input field after adding\r\n            // Disable the button if there are 4 items in the list\r\n            if (optionList.childElementCount >= 4) {\r\n                document.getElementById('OptionButton').disabled = true;\r\n            }\r\n        }\r\n    });\r\n}\r\nexport function collectOptions() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const optionList = document.getElementById('optionList');\r\n        const options = [];\r\n        optionList.querySelectorAll('li').forEach((listItem) => {\r\n            var _a;\r\n            const optionText = (_a = listItem.firstChild.textContent) === null || _a === void 0 ? void 0 : _a.trim();\r\n            if (optionText) {\r\n                options.push(optionText);\r\n            }\r\n        });\r\n        yield sendOptions(options);\r\n    });\r\n}\r\nfunction populateSubthemesSelect() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const subThemas = yield fillSubthemesSelect();\r\n            const output = document.getElementById(\"ThemaSelect\");\r\n            if (!output) {\r\n                throw new Error(\"ThemaSelect element not found\");\r\n            }\r\n            let bodyData = ``;\r\n            for (const subThema of subThemas) {\r\n                bodyData += `\r\n                <option value=\"${subThema.id}\" data-description=\"${subThema.description}\">${subThema.title}</option>\r\n            `;\r\n            }\r\n            output.innerHTML += bodyData;\r\n        }\r\n        catch (error) {\r\n            console.error('Error:', error);\r\n            alert(\"Something went wrong while fetching subthemes. Check the console for more details.\");\r\n        }\r\n    });\r\n}\r\nexport function addQuestionData() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        yield collectOptions();\r\n        const questionTitle = document.getElementById('QuestionTitle').value;\r\n        const selectedTheme = document.getElementById('ThemaSelect');\r\n        const selectedThemeId = selectedTheme.options[selectedTheme.selectedIndex].value;\r\n        const isActive = document.getElementById('ActiveCheckbox').checked;\r\n        const selectedType = document.getElementById('TypeSelect').value;\r\n        const flowElement = document.getElementById('FlowId');\r\n        let flowid = 0; // Default value\r\n        if (flowElement) {\r\n            const textContent = flowElement.textContent;\r\n            if (textContent) {\r\n                flowid = parseInt(textContent, 10);\r\n            }\r\n        }\r\n        const data = {\r\n            Text: questionTitle,\r\n            isActive: isActive,\r\n            SubTheme: parseInt(selectedThemeId),\r\n            Type: selectedType,\r\n            FlowId: flowid\r\n        };\r\n        yield addQuestion(data)\r\n            .then(response => {\r\n            alert(response);\r\n        })\r\n            .catch(error => {\r\n            alert(error);\r\n        });\r\n    });\r\n}\r\npopulateSubthemesSelect();\r\nif (optionButton) {\r\n    optionButton.addEventListener(\"click\", addOption);\r\n}\r\nif (submitQuestion) {\r\n    submitQuestion.addEventListener(\"click\", addQuestionData);\r\n}\r\n"],"names":[],"sourceRoot":""}