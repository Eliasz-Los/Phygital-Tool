{"version":3,"file":"upload.entry.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,6CAA6C,iBAAiB,EAAE,oBAAoB;AACpF;AACA;AACA;AACA,+DAA+D,mBAAmB;AAClF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;UExCA;UACA;UACA;UACA;UACA","sources":["webpack://phygital/./src/ts/Upload/upload.ts","webpack://phygital/webpack/before-startup","webpack://phygital/webpack/startup","webpack://phygital/webpack/after-startup"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst formElement = document.getElementById(\"upload-form\");\r\nconst uploadButton = document.getElementById(\"upload-button\");\r\nconst imageElement = document.getElementById(\"uploaded-image\");\r\nfunction uploadFile() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (!formElement) {\r\n            return;\r\n        }\r\n        const resultElement = formElement.elements.namedItem(\"result\");\r\n        const formData = new FormData(formElement);\r\n        try {\r\n            const response = yield fetch(\"/api/files\", {\r\n                method: \"POST\",\r\n                body: formData\r\n            });\r\n            if (response.ok) {\r\n                alert(\"Upload succeeded!\");\r\n            }\r\n            resultElement.value = `Result: ${response.status} ${response.statusText}.`;\r\n            if (response.status === 200) {\r\n                const responseObject = yield response.json();\r\n                imageElement.src = responseObject.url;\r\n                console.log(`Here is the image in the cloud: ${responseObject.url}`);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"Error:\", error);\r\n        }\r\n    });\r\n}\r\nuploadButton.addEventListener(\"click\", uploadFile);\r\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/ts/Upload/upload.ts\"]();\n",""],"names":[],"sourceRoot":""}