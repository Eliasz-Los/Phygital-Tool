{"version":3,"file":"feedback.entry.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACO;AACP;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACO;AACP;AACA,uDAAuD,OAAO,kBAAkB,WAAW;AAC3F;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACO;AACP;AACA,uDAAuD,WAAW;AAClE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA,uDAAuD,WAAW;AAClE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA,uDAAuD,OAAO;AAC9D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA,uDAAuD,OAAO;AAC9D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;UCxFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC6J;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qBAAqB;AAC3E;AACA;AACA,sDAAsD,iBAAiB;AACvE;AACA;AACA;AACA,iFAAiF,YAAY;AAC7F;AACA;AACA;AACA;AACA,kJAAkJ,YAAY,sBAAsB,YAAY;AAChM,mEAAmE,YAAY;AAC/E;AACA,0JAA0J,YAAY,sBAAsB,YAAY;AACxM,sEAAsE,YAAY;AAClF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB,sBAAsB;AACvC,wEAAwE,OAAO;AAC/E;AACA;AACA;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,oEAAoE,OAAO;AAC3E;AACA;AACA;AACA;AACA,cAAc,6DAAc;AAC5B;AACA;AACA,gFAAgF,OAAO;AACvF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4DAA4D,YAAY;AACxE;AACA;AACA;AACA,0BAA0B,6DAAc;AACxC;AACA,gDAAgD,aAAa;AAC7D,4FAA4F,OAAO;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAkB;AAC5C;AACA,gDAAgD,YAAY;AAC5D,gCAAgC,0BAA0B;AAC1D,2FAA2F,WAAW;AACtG,8FAA8F,WAAW;AACzG;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oEAAqB;AAC/C;AACA,gDAAgD,YAAY;AAC5D;AACA,oCAAoC,0BAA0B;AAC9D,kGAAkG,WAAW;AAC7G,sGAAsG,WAAW;AACjH;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6DAAc;AACxC;AACA,4CAA4C,QAAQ;AACpD;AACA,oCAAoC,0BAA0B;AAC9D,0FAA0F,OAAO;AACjG,gGAAgG,OAAO;AACvG;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAiB;AAC3C;AACA,4CAA4C,QAAQ;AACpD;AACA,oCAAoC,0BAA0B;AAC9D,0FAA0F,OAAO;AACjG,gGAAgG,OAAO;AACvG;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mEAAmE,OAAO;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA","sources":["webpack://phygital/./src/ts/Feedback/feedbackRest.ts","webpack://phygital/webpack/bootstrap","webpack://phygital/webpack/runtime/define property getters","webpack://phygital/webpack/runtime/hasOwnProperty shorthand","webpack://phygital/webpack/runtime/make namespace object","webpack://phygital/./src/ts/Feedback/feedback.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nexport function readReactions(postId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch(`/api/feedbacks/${postId}/Reactions`);\r\n        if (!response.ok) {\r\n            throw new Error(\"Error fetching reactions\");\r\n        }\r\n        return yield response.json();\r\n    });\r\n}\r\nexport function createReaction(postId, reaction) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch(`/api/feedbacks/${postId}/AddReaction`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(reaction)\r\n        });\r\n        if (!response.ok) {\r\n            const error = yield response.json();\r\n            throw { status: response.status, message: error };\r\n        }\r\n        return yield response.json();\r\n    });\r\n}\r\nexport function deleteReaction(postId, reactionId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch(`/api/feedbacks/${postId}/DeleteReaction/${reactionId}`, {\r\n            method: 'DELETE'\r\n        });\r\n        if (!response.ok) {\r\n            const error = yield response.text();\r\n            throw { status: response.status, message: error.toString() };\r\n        }\r\n    });\r\n}\r\nexport function createLikeReaction(reactionId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch(`/api/feedbacks/${reactionId}/LikeReaction`, {\r\n            method: 'POST'\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(\"Error liking reaction\");\r\n        }\r\n        return yield response.json();\r\n    });\r\n}\r\nexport function createDislikeReaction(reactionId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch(`/api/feedbacks/${reactionId}/DislikeReaction`, {\r\n            method: 'POST'\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(\"Error disliking reaction\");\r\n        }\r\n        return yield response.json();\r\n    });\r\n}\r\nexport function createLikePost(postId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch(`/api/feedbacks/${postId}/LikePost`, {\r\n            method: 'POST'\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(\"Error liking post\");\r\n        }\r\n        return yield response.json();\r\n    });\r\n}\r\nexport function createDislikePost(postId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch(`/api/feedbacks/${postId}/DislikePost`, {\r\n            method: 'POST'\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(\"Error disliking post\");\r\n        }\r\n        return yield response.json();\r\n    });\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createReaction, readReactions, createLikePost, createDislikePost, deleteReaction, createLikeReaction, createDislikeReaction } from \"./feedbackRest\";\r\nlet posts = document.querySelectorAll('.post');\r\nconst likeButtons = document.querySelectorAll('.like-button');\r\nconst dislikeButtons = document.querySelectorAll('.dislike-button');\r\nlet reactionLikeButtons = document.querySelectorAll('.reaction-like-button');\r\nlet reactionDislikeButtons = document.querySelectorAll('.reaction-dislike-button');\r\nfunction getReactionsOfPost(postId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        yield readReactions(postId)\r\n            .then(reactions => {\r\n            let bodyData = ``;\r\n            reactions.forEach(reaction => {\r\n                bodyData += `\r\n            <div class=\"input-group gap-2 reaction\">\r\n                <div class=\"row d-flex spacing-top form-control\">\r\n                        <div class=\"col-2 d-flex justify-content-start\">\r\n                            <p class=\"form-control\">${reaction.accountName}</p>\r\n                        </div>\r\n                        <div class=\"col-8 d-flex justify-content-between\">\r\n                            <p class=\"form-control\">${reaction.content}</p>\r\n                        </div>\r\n                        <div class=\"col \">\r\n                            <div class=\"d-flex justify-content-end\">\r\n                                <button class=\"btn btn-danger bi bi-trash\" id=\"${reaction.id}\"></button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row d-flex\">\r\n                                <div class=\"col\">\r\n                                    <button type=\"submit\" class=\"btn btn-success bi bi-hand-thumbs-up reaction-like-button\" id=\"likeButtonReact_${reaction.id}\" data-reaction-id=\"${reaction.id}\">\r\n                                        <span id=\"likeCountReact_${reaction.id}\"></span> \r\n                                    </button>\r\n                                    <button type=\"submit\" class=\"btn btn-danger bi bi-hand-thumbs-down reaction-dislike-button\"  id=\"dislikeButtonReact_${reaction.id}\" data-reaction-id=\"${reaction.id}\">\r\n                                        <span id=\"dislikeCountReact_${reaction.id}\"> </span>\r\n                                    </button>\r\n                                </div>\r\n                         </div>\r\n                    </div>\r\n                </div>`;\r\n            });\r\n            /* ${reaction.dislikeCount}*/\r\n            let reactionList = document.getElementById(`listReactions_${postId}`);\r\n            if (reactionList) {\r\n                reactionList.innerHTML = bodyData;\r\n            }\r\n            else {\r\n                console.log(`reactionList for post ${postId} is null`);\r\n            }\r\n            removeReaction(postId, reactions);\r\n            //update the reaction like/Dislike collections for the new reactions\r\n            reactionLikeButtons = document.querySelectorAll('.reaction-like-button');\r\n            reactionDislikeButtons = document.querySelectorAll('.reaction-dislike-button');\r\n            //event listeners aan toekoppelen\r\n            handleReactionLikes();\r\n            handleReactionDislikes();\r\n        })\r\n            .catch(error => {\r\n            console.error(error);\r\n        });\r\n    });\r\n}\r\nfunction getReactions() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        posts.forEach(post => {\r\n            let postId = post.getAttribute('data-post-id');\r\n            if (postId !== null) {\r\n                getReactionsOfPost(parseInt(postId));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction sendReaction(postId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let content = document.querySelector(`input[name=\"content_${postId}\"]`);\r\n        const reactionObject = {\r\n            content: content.value\r\n        };\r\n        console.log(reactionObject);\r\n        yield createReaction(postId, reactionObject)\r\n            .then(reaction => {\r\n            console.log(reaction);\r\n            let reactionCountElement = document.getElementById(`reactionCount_${postId}`);\r\n            if (reactionCountElement !== null) {\r\n                let currentCount = parseInt(reactionCountElement.innerText);\r\n                console.log(currentCount);\r\n                reactionCountElement.innerText = (currentCount + 1).toString();\r\n            }\r\n        })\r\n            .catch(error => {\r\n            if (error.status === 400) {\r\n                alert(error.message.errors.Content[0]);\r\n            }\r\n            else {\r\n                console.error(error);\r\n            }\r\n        });\r\n        content.value = '';\r\n    });\r\n}\r\nfunction removeReaction(postId, reactions) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        reactions.forEach(reaction => {\r\n            const deleteButton = document.getElementById(`${reaction.id}`);\r\n            if (deleteButton) {\r\n                deleteButton.addEventListener('click', (event) => __awaiter(this, void 0, void 0, function* () {\r\n                    event.preventDefault();\r\n                    yield deleteReaction(postId, reaction.id)\r\n                        .then(() => {\r\n                        console.log(`Reaction ${reaction.id} deleted`);\r\n                        let reactionCountElement = document.getElementById(`reactionCount_${postId}`);\r\n                        if (reactionCountElement !== null) {\r\n                            let currentCount = parseInt(reactionCountElement.innerText);\r\n                            console.log(currentCount);\r\n                            reactionCountElement.innerText = (currentCount - 1).toString();\r\n                        }\r\n                        getReactionsOfPost(postId);\r\n                    })\r\n                        .catch(error => {\r\n                        if (error.status === 403) {\r\n                            alert('Je mag niet andermans reacties verwijderen');\r\n                        }\r\n                        else {\r\n                            console.error(error);\r\n                        }\r\n                    });\r\n                }));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction handleReactionLikes() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        reactionLikeButtons.forEach(button => {\r\n            button.addEventListener('click', (event) => __awaiter(this, void 0, void 0, function* () {\r\n                const reactionId = button.getAttribute('data-reaction-id');\r\n                event.preventDefault();\r\n                if (reactionId !== null) {\r\n                    button.disabled = true;\r\n                    yield createLikeReaction(parseInt(reactionId))\r\n                        .then(result => {\r\n                        console.log(`Reaction ${reactionId} liked`);\r\n                        const { likeCount, dislikeCount } = result;\r\n                        const likeCountElement = document.getElementById(`likeCountReact_${reactionId}`);\r\n                        const dislikeCountElement = document.getElementById(`likeCountReact_${reactionId}`);\r\n                        if (likeCountElement !== null && dislikeCountElement !== null) {\r\n                            likeCountElement.innerText = likeCount.toString();\r\n                            dislikeCountElement.innerText = dislikeCount.toString();\r\n                        }\r\n                    })\r\n                        .catch(error => console.error(error));\r\n                    button.disabled = false;\r\n                }\r\n            }));\r\n        });\r\n    });\r\n}\r\nfunction handleReactionDislikes() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        reactionDislikeButtons.forEach(button => {\r\n            button.addEventListener('click', (event) => __awaiter(this, void 0, void 0, function* () {\r\n                const reactionId = button.getAttribute('data-reaction-id');\r\n                event.preventDefault();\r\n                if (reactionId !== null) {\r\n                    button.disabled = true;\r\n                    yield createDislikeReaction(parseInt(reactionId))\r\n                        .then(result => {\r\n                        console.log(`Reaction ${reactionId} disliked`);\r\n                        if (typeof result === 'object' && result !== null) {\r\n                            const { likeCount, dislikeCount } = result;\r\n                            const likeCountElement = document.getElementById(`dislikeCountReact_${reactionId}`);\r\n                            const dislikeCountElement = document.getElementById(`dislikeButtonReact_${reactionId}`);\r\n                            if (likeCountElement !== null && dislikeCountElement !== null) {\r\n                                likeCountElement.innerText = likeCount.toString();\r\n                                dislikeCountElement.innerText = dislikeCount.toString();\r\n                            }\r\n                        }\r\n                    })\r\n                        .catch(error => {\r\n                        console.error(error);\r\n                    });\r\n                    button.disabled = false;\r\n                }\r\n            }));\r\n        });\r\n    });\r\n}\r\nfunction handlePostLikes() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        likeButtons.forEach(button => {\r\n            button.addEventListener('click', (event) => __awaiter(this, void 0, void 0, function* () {\r\n                const postId = button.getAttribute('data-post-id');\r\n                event.preventDefault();\r\n                if (postId !== null) {\r\n                    button.disabled = true;\r\n                    yield createLikePost(parseInt(postId))\r\n                        .then(result => {\r\n                        console.log(`Post ${postId} liked`);\r\n                        if (typeof result === 'object' && result !== null) {\r\n                            const { likeCount, dislikeCount } = result;\r\n                            const likeCountElement = document.getElementById(`likeCount_${postId}`);\r\n                            const dislikeCountElement = document.getElementById(`dislikeCount_${postId}`);\r\n                            if (likeCountElement !== null && dislikeCountElement !== null) {\r\n                                likeCountElement.innerText = likeCount.toString();\r\n                                dislikeCountElement.innerText = dislikeCount.toString();\r\n                            }\r\n                        }\r\n                    })\r\n                        .catch(error => {\r\n                        console.error(error);\r\n                    });\r\n                    button.disabled = false;\r\n                }\r\n            }));\r\n        });\r\n    });\r\n}\r\nfunction handlePostDislikes() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        dislikeButtons.forEach(button => {\r\n            button.addEventListener('click', (event) => __awaiter(this, void 0, void 0, function* () {\r\n                const postId = button.getAttribute('data-post-id');\r\n                event.preventDefault();\r\n                if (postId !== null) {\r\n                    button.disabled = true;\r\n                    yield createDislikePost(parseInt(postId))\r\n                        .then(result => {\r\n                        console.log(`Post ${postId} disliked`);\r\n                        if (typeof result === 'object' && result !== null) {\r\n                            const { dislikeCount, likeCount } = result;\r\n                            const likeCountElement = document.getElementById(`likeCount_${postId}`);\r\n                            const dislikeCountElement = document.getElementById(`dislikeCount_${postId}`);\r\n                            if (dislikeCountElement !== null && likeCountElement !== null) {\r\n                                likeCountElement.innerText = likeCount.toString();\r\n                                dislikeCountElement.innerText = dislikeCount.toString();\r\n                            }\r\n                        }\r\n                    }).catch(error => {\r\n                        console.error(error);\r\n                    });\r\n                    button.disabled = false;\r\n                }\r\n            }));\r\n        });\r\n    });\r\n}\r\nposts.forEach(post => {\r\n    let postId = post.getAttribute('data-post-id');\r\n    if (postId !== null) {\r\n        let reactionForm = document.getElementById(`reactionForm_${postId}`);\r\n        reactionForm.addEventListener('submit', (event) => __awaiter(void 0, void 0, void 0, function* () {\r\n            event.preventDefault();\r\n            if (postId !== null) {\r\n                yield sendReaction(parseInt(postId));\r\n                yield getReactionsOfPost(parseInt(postId));\r\n            }\r\n        }));\r\n    }\r\n});\r\ngetReactions();\r\nhandlePostLikes();\r\nhandlePostDislikes();\r\nhandleReactionLikes();\r\nhandleReactionDislikes();\r\n"],"names":[],"sourceRoot":""}