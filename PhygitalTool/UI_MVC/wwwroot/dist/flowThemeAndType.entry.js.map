{"version":3,"file":"flowThemeAndType.entry.js","mappings":";;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY,sBAAsB,qBAAqB,IAAI,eAAe;AAC3G;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA","sources":["webpack://phygital/./src/ts/Flow/Creation/flowThemeAndType.ts"],"sourcesContent":["\"use strict\";\r\nvar _a;\r\nfunction fillSubthemesSelect() {\r\n    fetch(`/api/Themas/subthemas`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => {\r\n        if (response.status === 200) {\r\n            return response.json();\r\n        }\r\n        else {\r\n            alert(\"Something went wrong in the backend subthemas, check the console for more details!\");\r\n            return Promise.reject(\"Failed to fetch subthemas\");\r\n        }\r\n    })\r\n        .then(subThemas => {\r\n        const output = document.getElementById(\"ThemaSelect\");\r\n        let bodyData = ``;\r\n        for (const subThema of subThemas) {\r\n            bodyData += `\r\n                <option value=\"${subThema.id}\" data-description=\"${subThema.description}\">${subThema.title}</option>\r\n            `;\r\n        }\r\n        output.innerHTML += bodyData;\r\n    })\r\n        .catch(error => {\r\n        console.log(error);\r\n    });\r\n}\r\nfunction addFlow() {\r\n    const selectedType = document.getElementById('TypeSelect').value;\r\n    const selectedTheme = document.getElementById('ThemaSelect');\r\n    const selectedThemeId = selectedTheme.options[selectedTheme.selectedIndex].value;\r\n    const isActive = document.getElementById('ActiveCheckbox').checked;\r\n    const data = {\r\n        FlowType: selectedType,\r\n        IsOpen: isActive,\r\n        ThemeId: parseInt(selectedThemeId)\r\n    };\r\n    // Send POST request to the server\r\n    fetch('/api/Flows/AddFlow', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n        if (response.ok) {\r\n            // Handle success response\r\n            console.log('Flow added successfully');\r\n            // Redirect to the Index action with a query parameter to indicate refresh\r\n            window.location.href = '/Flow/Index?refresh=true';\r\n        }\r\n        else {\r\n            // Handle error response\r\n            console.error('Failed to add flow');\r\n        }\r\n    })\r\n        .catch(error => {\r\n        console.error('Error:', error);\r\n    });\r\n}\r\n(_a = document.getElementById(\"submitFlow\")) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", addFlow);\r\nfillSubthemesSelect();\r\n"],"names":[],"sourceRoot":""}